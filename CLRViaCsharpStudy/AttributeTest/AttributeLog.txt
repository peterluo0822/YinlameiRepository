property描述的是对象的值。
Attribute是对property的说明（当然attribute的对象AttributeUsage可以是类、属性、字段…… [AttributeUsage(AttributeTargets.Property)]）
例如：
[StringLength(MaxLength =5)]
public String Name { get; set; }
描述了Name的最大长度是5


attribute可以结合反射，实现验证

        public static void Validate(object obj)
        {
            var t = obj.GetType();


            var properties = t.GetProperties();//获取对象的所有属性（properties ）

            foreach (var property in properties)
            {

                if (!property.IsDefined(typeof(StringLengthAttribute), false)) continue;//判断属性是否具有StringLengthAttribute这个属性


                var attributes = property.GetCustomAttributes();//获取制定property的所有attribute



                foreach (var attribute in attributes)
                {
                    //这里的MaximumLength 最好用常量去做
                    var maxinumLength = (int)attribute.GetType().GetProperty("MaxLength").GetValue(attribute);


                    //获取属性的值
                    var propertyValue = property.GetValue(obj) as string;
                    if (propertyValue == null)
                        throw new Exception("exception info");//这里可以自定义，也可以用具体系统异常类

                    if (propertyValue.Length > maxinumLength)
                        throw new Exception(string.Format("属性{0}的值{1}的长度超过了{2}", property.Name, propertyValue, maxinumLength));
                }
            }
        }
结合扩展方法，就可以写一个针对全局的的验证方法
譬如      public static bool ValidateMaxLength<T>( this T obj)

调用方法：
            Peoduct produc = new Peoduct();
            produc.Name = "4001669410014";
            produc.ValidateMaxLength();
